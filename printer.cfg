# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[include mainsail.cfg]
[include Adaptive_Meshing.cfg]
[include KAMP_Settings.cfg]
[include Line_Purge.cfg]
[include Smart_Park.cfg]
[include Voron_Purge.cfg]
[include timelapse.cfg]
[include macros.cfg]
[include homing.cfg]
[include test_speed.cfg]
[include stealthburner_leds.cfg]
[include config_backup.cfg]

[auto_speed]

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[exclude_object]

[pause_resume]

[display_status]

[virtual_sdcard]
path: ~/printer_data/gcodes

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_37003F001650535556323420-if00
restart_method: command
##--------------------------------------------------------------------

[force_move]
enable_force_move: True

[input_shaper]
shaper_freq_x: 54.6
shaper_freq_y: 42
shaper_type: mzv # mzv is less aggressive aggressive types may round corners

[printer]
kinematics: corexy
max_velocity: 600  
max_accel: 15000 #10000
max_accel_to_decel: 999999 #10000
max_z_velocity: 350 #50          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 1000 #200
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 20   #Max 100
homing_retract_dist: 0
homing_positive_dir: true
step_pulse_duration: 0.00000008

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: true
run_current: 1.0
#hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0 #was 0
diag_pin: ^PG6
driver_SGTHRS: 100 #255 most sensistive 0 least sensitive

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 20  #Max 100
homing_retract_dist: 0
homing_positive_dir: true
step_pulse_duration: 0.00000008

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: true
run_current: 1.0
#hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0 #was 0
diag_pin: ^PG9
driver_SGTHRS: 100 #255 most sensistive 0 least sensitive
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe: z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 310
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  Keenovo branded bed heaters should use Generic 3950
##  LDO branded bed heaters will have the sensor type labelled on the heater
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: .8
min_temp: 0
max_temp: 120
control: pid
control = pid
pid_kp = 42.888
pid_ki = 1.355
pid_kd = 339.351

[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 60
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.


#####################################################################
#   Voron Tap
#####################################################################

##  TAP
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
pin: ~!EBBCan: PB9
x_offset: 0
y_offset: 0
z_offset: 0
speed: 10.0
samples: 5
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}
    
    {% if TARGET_TEMP > PROBE_TEMP %}
    { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
    M109 S{ PROBE_TEMP }
    {% else %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if ACTUAL_TEMP > MAX_TEMP %}
    { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
    {% endif %}
    {% endif %}
    
    #####################################################################
    #   Fan Control
    #####################################################################
    
    ##  Print Cooling Fan in CANBUS
    
    ##  Hotend Fan in CANBUS
    
    ##  Electronics fan - FAN2
[controller_fan electronics_fan]
pin: PA8 #PD12
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 0.5
heater: heater_bed
fan_speed: 1.0

##  nevermore fan - FAN3
#[heater_fan nevermore]
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[output_pin nevermore]
pin: PD13
value: 0
shutdown_value: 0


#####################################################################
#   LED Control                                                     #
#####################################################################

[output_pin caselight]
## Chamber Lighting - CNC_FAN5
pin: PD15
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines                           #
#####################################################################

[idle_timeout]
timeout: 7200
gcode:
    RESPOND MSG="Idle timeout reached"
    {% if "z" in printer.toolhead.homed_axes %}
    G90
    #example to move the head somewhere
    G1 X175 Y175 Z50 F9000
    
    PARK
    _TIP_SHAPING
    G1 E-10 F2100
    {% endif %}
    
    TURN_OFF_HEATERS
    M107
    M400
    BED_MESH_CLEAR
    {% if disable_motors_in_end_print %}
    M84
    {% endif %}
    LIGHT_ON S={light_intensity_end_print}
    #  STATUS_OFF
    
    #[safe_z_home]
    ##  XY Location of the Z Endstop Switch
    ##  Update -10,-10 to the XY coordinates of your endstop pin
    ##  (such as 157,305) after going through Z Endstop Pin
    ##  Location Definition step.
    #home_xy_position:175,175
    #speed:100
    #z_hop:10
    #z_hop_speed:10
    
[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
    -60,-10
    410,420
    ##  Probe points
points:
    50,25
    50,275
    300,275
    300,25
speed: 300 #100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins           #
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,
    
    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>
    
    #####################################################################
    #   Displays                                                        #
    #####################################################################
    
[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

#####################################################################
#  CANBUS                                                           #
#####################################################################

# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_37003F001650535556323420-if00
canbus_uuid: 331799c2e926 ## Replace this with your UUID

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[temperature_sensor ebb_mcu_temp]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

#[adxl345]
#cs_pin: EBBCan: PB12
#spi_software_sclk_pin: EBBCan: PB10
#spi_software_mosi_pin: EBBCan: PB11
#spi_software_miso_pin: EBBCan: PB2
#axes_map: z,-y,x

#[resonance_tester]
#probe_points: 150, 150, 40
#accel_chip: adxl345

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 32 #16
full_steps_per_rotation: 200
rotation_distance: 22.225372078
gear_ratio: 50:10
nozzle_diameter: 0.400
filament_diameter: 1.750
instantaneous_corner_velocity: 1.5
max_extrude_cross_section: 0.8
heater_pin: EBBCan: PB13
pwm_cycle_time: 0.02
smooth_time: 0.5
max_power: 0.8
#sensor_type: PT1000
#sensor_pin: EBBCan: PA3
control: pid
#pid_Kp = 26.213
#pid_Ki = 1.304
#pid_Kd = 131.721
pid_kp = 25.229
pid_ki = 1.425
pid_kd = 111.638
max_extrude_cross_section: 5
# If you use PT1000, use these parameters instead
sensor_type: MAX31865
sensor_pin: EBBCan: PA4
#spi_bus: spi1
spi_speed: 1000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 4000000.
spi_software_miso_pin: EBBCan:PA6
spi_software_mosi_pin: EBBCan:PA7
spi_software_sclk_pin: EBBCan:PA5
#   See the "common SPI settings" section for a description of the
#   above parameters.
#tc_type: K
#tc_use_50Hz_filter: True
#tc_averaging_count: 1
#   The above parameters control the sensor parameters of MAX31856
#   chips. The defaults for each parameter are next to the parameter
#   name in the above list.
#rtd_nominal_r: 1000
#rtd_reference_r: 4300
rtd_num_of_wires: 2
#rtd_use_50Hz_filter: True
#   The above parameters control the sensor parameters of MAX31865
#   chips. The defaults for each parameter are next to the parameter
#   name in the above list.
min_extrude_temp: 170
#   The minimum temperature (in Celsius) at which extruder move
#   commands may be issued. The default is 170 Celsius.
min_temp: 0
max_temp: 300
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2
pressure_advance: .03165

[firmware_retraction]
retract_length: 0.4
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 20
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[tmc2209 extruder]
uart_pin: EBBCan: PA15
#cs_pin: EBBCan: PA15
#spi_software_sclk_pin: EBBCan: PB10
#spi_software_mosi_pin: EBBCan: PB11
#spi_software_miso_pin: EBBCan: PB2
interpolate: true
run_current: 0.65
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current: 0.12
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
stealthchop_threshold: 999999
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.
driver_IHOLDDELAY: 8
#driver_IRUNDELAY: 2
#driver_TPOWERDOWN: 10
driver_TBL: 3
driver_TOFF: 4
driver_HEND: 3
driver_HSTRT: 4
#driver_FD3: 0
#driver_TPFD: 0
#driver_CHM: 0
#driver_VHIGHFS: 0
#driver_VHIGHCHM: 0
#driver_DISS2G: 0
#driver_DISS2VS: 1
driver_PWM_AUTOSCALE: True
driver_PWM_AUTOGRAD: True
#driver_PWM_FREQ: 2
#driver_FREEWHEEL: 0
driver_PWM_GRAD: 12
driver_PWM_OFS: 40
driver_PWM_REG: 15
driver_PWM_LIM: 12
#driver_SGT: 35
#driver_SEMIN: 2
#driver_SEUP: 3
#driver_SEMAX: 8
#driver_SEDN: 2
#driver_SEIMIN: 0
#driver_SFILT: 1
#driver_SG4_ANGLE_OFFSET: 1
#   Set the given register during the configuration of the TMC2240
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#diag0_pin: EBBCan: PB3
#rref: 12000
#   The resistance (in ohms) of the resistor between IREF and GND. The
#   default is 12000.

[fan]
pin: EBBCan: PA1 #normal is PD12 moved this due to burning mosfet
max_power: 1.0
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 60.0

#[heater_fan 4W_PWM_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

#[neopixel hotend_rgb]
#pin: EBBCan:PD3
#   The pin connected to the neopixel. This parameter must be
#   provided.
#chain_count: 3 # For PCB Logo
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRBW # For PCB Logo
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

#[autotune_tmc stepper_x]
#motor: ldo-42sth48-2004mah
#sg4_thrs: 125
#tuning_goal: auto
#extra_hysteresis: 0 #0-8 higher is more hysteresis and more heat and chop
#tbl: 1 #0-3 2 is default
#toff: 1
#sgt: 1 #-64 to 63
#pwm_freq_target: 55e3
#voltage: 24 #0.0 to 60

#[autotune_tmc stepper_y]
#motor: ldo-42sth48-2004mah
#sg4_thrs: 125
#tuning_goal: auto
#extra_hysteresis: 0 #0-8 higher is more hysteresis and more heat and chop
#tbl: 1 #0-3 2 is default
#toff: 1
#sgt: 1 #-64 to 63
#pwm_freq_target: 55e3
#voltage: 24 #0.0 to 60

#[autotune_tmc stepper_z]
#motor: ldo-42sth48-2004ac
#tuning_goal: auto
#extra_hysteresis: 0 #0-8 higher is more hysteresis and more heat and chop
#tbl: 1 #0-3 2 is default
#toff: 1
#[autotune_tmc stepper_z1]
#motor: ldo-42sth48-2004ac
#tuning_goal: auto
#extra_hysteresis: 0 #0-8 higher is more hysteresis and more heat and chop
#tbl: 1 #0-3 2 is default
#toff: 1
#[autotune_tmc stepper_z2]
#motor: ldo-42sth48-2004ac
#tuning_goal: auto
#extra_hysteresis: 0 #0-8 higher is more hysteresis and more heat and chop
#tbl: 1 #0-3 2 is default
#toff: 1
#[autotune_tmc stepper_z3]
#motor: ldo-42sth48-2004ac
#tuning_goal: auto
#extra_hysteresis: 0 #0-8 higher is more hysteresis and more heat and chop
#tbl: 1 #0-3 2 is default
#toff: 1

#[autotune_tmc extruder]
#motor: ldo-36sth20-1004ahg
#tuning_goal: auto
#extra_hysteresis: 0 #0-8 higher is more hysteresis and more heat and chop
#tbl: 1 #0-3 2 is default
#toff: 1
#pwm_freq_target: 55e3
#voltage: 24 #0.0 to 60
#overvoltage_vth: 24.8

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 42.888
#*# pid_ki = 1.355
#*# pid_kd = 339.351
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.229
#*# pid_ki = 1.425
#*# pid_kd = 111.638
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.052889, -0.010389, 0.005861, -0.007889
#*# 	  -0.049139, -0.015389, 0.008361, -0.011639
#*# 	  -0.022889, -0.002889, 0.029611, 0.002111
#*# x_count = 4
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 92.38999999999999
#*# max_x = 255.28999999999996
#*# min_y = 128.78
#*# max_y = 221.34
#*#
#*# [probe]
#*# z_offset = -0.270

[include shell_command.cfg]
